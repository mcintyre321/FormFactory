@using System.ComponentModel.DataAnnotations
@using FormFactory
@model PropertyVm
@if (Model.IsWritable && Model.Choices != null)
{
    var choices = Model.Choices as IEnumerable<Tuple<string, string>>;
    if (choices == null && Model.Choices is IEnumerable<string>)
    {
        choices = Model.Choices.Cast<string>().Select(c => Tuple.Create(c, c));
    }
    <select name="@Model.Name" id="@Model.Id" class="@(Model.IsWritable ? "" : "disabled")" @(Model.IsWritable ? "" : "disabled=disabled")>
        @foreach (var option in choices)
        {
            <option value="@option.Item2" @(Model.Value != null && option.Item2 == Model.Value.ToString() ? "selected=selected" : "")>@option.Item1</option>    
        }
    </select>
}
else
{
    var dataAttributes = Model.GetCustomAttributes().OfType<DataTypeAttribute>();
    var inputType = dataAttributes.Any(da => da.DataType == DataType.Password) ? "password" : "text";

    if (!Model.IsWritable)
    {
        <span class="input-large uneditable-input" >@Model.Value</span>
    }
    else
    {
        <input class="input-large" id="@Model.Id" name="@Model.Name" size="30" type="@inputType" value="@Model.Value" />

        if (Model.Suggestions != null && Model.Suggestions.Cast<object>().Any())
        {
            var escapedSuggestions = Model.Suggestions.Cast<string>().Select(s => s.Replace("'", "''"));
            <script type="text/javascript">
                $(function () {
                    if (jQuery().autocomplete) {
                        window.setTimeout(function () { //in a timeout so it can be embedded in a popover
                            $("#@Model.Id")
                                .autocomplete({
                                    source: ['@Html.Raw(string.Join("', '", escapedSuggestions))'],
                                    minLength: 0
                                })
                                .focus(function () {
                                    $(this).trigger('keydown.autocomplete');
                                });
                        }, 1);
                    } else {
                        console.log("could not load $.autocomplete for @Model.Id suggestions");
                    }
                });
    </script>
        }
    }
}