@using FormFactory
@model PropertyVm
@{
    var enumType = Nullable.GetUnderlyingType(Model.Type) ?? Model.Type;
}
@if (Model.IsWritable)
{
    <select name="@Model.Name" @(Model.IsWritable ? "" : "disabled=disabled")>
        @if (Nullable.GetUnderlyingType(Model.Type) != null)
        {
            <option value="" @(Model.Value == null ? "selected=selected" : "")></option>
        }
        @foreach (var enumMember in Enum.GetValues(enumType))
        {

            var selected = (Model.Value != null && Model.Value.ToString() == enumMember.ToString());
            <option value="@enumMember.ToString()" @(selected ? "selected=selected" : "")>@enumMember.ToString().</option>
        }
    </select>
}
else
{
    var displayValue = Model.Value == null ? null : Enum.Parse(enumType, Model.Value.ToString());
    <span class="xlarge uneditable-input">@displayValue.ToString().</span>
}